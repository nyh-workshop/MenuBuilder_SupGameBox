<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>